openapi: 3.0.3
servers:
  - url: https://r95e08rtmj.execute-api.us-east-1.amazonaws.com/
info:
  title: HKP Solutions Beta App API
  version: 0.0.1
  description: HKP Solutions Beta App API delivers functionality for all aspects
    of HKP Solutions Beta Application.
  contact:
    name: Alvan Caleb Arulandu
    email: caleb.arulandu@hkpsolutions.com
paths:
  /:
    get:
      operationId: getBaseUrl
      summary: Show API details
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              example:
                message: Welcome to HKP Solutions API!
  /calculator/add:
    post:
      operationId: calculatorAddNumbers
      summary: Add two numbers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - x
                - y
              properties:
                x:
                  type: integer
                y:
                  type: integer
              example:
                x: 1
                y: 2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - sum
                properties:
                  sum:
                    type: integer
                example:
                  sum: 3
      security:
        - bearerAuthorizer: []
  /users/sign-up:
    post:
      operationId: usersSignUpUnConfirmed
      summary: Sign's up an user, but doesn't confirm them. To confirm an user, a
        confirmation text will be sent the the phone number. The phone number
        should be in international phone number format -- e.g.; an US phone
        number (202)456-1111 would be "+12024561111".
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - email
                - phoneNumber
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                phoneNumber:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                example: {}
  /users/confirm-sign-up:
    post:
      operationId: usersConfirmSignUp
      summary: Confirm unconfirmed user that has already signed up. Use the
        verification code sent to your phone number in the user sign up stage as
        the confirmation code. Confirmation codes should consist of six digits.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - email
                - phoneNumber
                - confirmationCode
                - employmentType
                - profileInfo
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                phoneNumber:
                  type: string
                confirmationCode:
                  type: integer
                employmentType:
                  type: string
                profileInfo:
                  type: object
                  properties:
                    dateOfBirth:
                      type: string
                    addressLineOne:
                      type: string
                    addressLineTwo:
                      type: string
                    city:
                      type: string
                    zip:
                      type: string
                    firstName:
                      type: string
                    lastName:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - authResult
                properties:
                  authResult:
                    type: object
                    required:
                      - AccessToken
                      - ExpiresIn
                      - TokenType
                      - Refresh Token
                      - IdToken
                    properties:
                      AccessToken:
                        type: string
                      ExpiresIn:
                        type: integer
                      TokenType:
                        type: string
                      RefreshToken:
                        type: string
                      IdToken:
                        type: string
                    example:
                      AccessToken: aweiofj....waoeifjoa
                      ExpiresIn: 3600
                      TokenType: Bearer
                      Refreshtoken: bwefja....bawefioje
                      IdToken: ceqioj....faweijbw
                  item:
                    type: object
                    properties:
                      userId:
                        type: string
                      username:
                        type: string
                      profileInfo:
                        $ref: "#/paths/~1users~1confirm-sign-up/post/requestBody/content/application~1j\
                          son/schema/properties/profileInfo"
                      employmentType:
                        type: string
                      startDate:
                        type: string
                      endDate:
                        type: string
  /users/login:
    post:
      operationId: usersLogin
      summary: Logs-in user and returns tokens.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
            example:
              username: bob
              email: bob@company.com
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - authResult
                properties:
                  authResult:
                    $ref: "#/paths/~1users~1confirm-sign-up/post/responses/200/content/application~\
                      1json/schema/properties/authResult"
  /hotel:
    post:
      operationId: createHotel
      summary: Creates a new hotel.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                HIN:
                  type: string
                name:
                  type: string
                address:
                  type: string
              required:
                - HIN
                - name
                - address
              example:
                HIN: "123456"
                name: Marriot
                address: 123 Generic Street, 12345, New York NY, USA
      responses:
        "200":
          description: Returns the newly created hotel.
          content:
            application/json:
              schema:
                properties:
                  new_hotel:
                    type: object
                    properties:
                      HIN:
                        type: string
                      name:
                        type: string
                      address:
                        type: string
                    required:
                      - HIN
                      - name
                      - address
                    example:
                      HIN: "123456"
                      name: Marriot
                      address: 123 Generic Street, 12345, New York NY, USA
                required:
                  - new_hotel
  "/hotel/{HIN}":
    get:
      operationId: getHotel
      summary: Find hotel item by Hotel Identification Number (HIN).
      parameters:
        - in: path
          name: HIN
          required: true
          schema:
            type: string
          description: six digit pin number, unique to each hotel
          example: "000007"
      responses:
        "200":
          description: Returns the hotel with matching HIN.
          content:
            application/json:
              schema:
                type: object
                required:
                  - new_hotel
                properties:
                  new_hotel:
                    type: object
                    properties:
                      HIN:
                        type: string
                      hotel_info:
                        type: object
                        properties:
                          address:
                            type: string
                          name:
                            type: string
                        required:
                          - address
                          - name
                      floors:
                        type: object
                        additionalProperties:
                          $ref: "#/paths/~1hotel~1%7BHIN%7D~1floors/post/requestBody/content/application~\
                            1json/schema"
                    required:
                      - HIN
                      - hotel_info
                      - floors
  "/hotel/{HIN}/floors":
    post:
      operationId: createFloor
      summary: Creates a new floor in the hotel with matching HIN.
      parameters:
        - in: path
          name: HIN
          required: true
          schema:
            type: string
          description: six digit pin number, unique to each hotel
          example: "000007"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                floor_name:
                  type: string
                rooms:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      room_name:
                        type: string
                      type:
                        type: string
                      is_decommissioned:
                        type: string
                      occupied_by:
                        type: string
                      clean_status:
                        type: string
                      service_status:
                        type: string
      responses:
        "200":
          description: Returns the newly created floor.
          content:
            application/json:
              schema:
                properties:
                  floor:
                    type: object
                    additionalProperties:
                      $ref: "#/paths/~1hotel~1%7BHIN%7D~1floors/post/requestBody/content/application~\
                        1json/schema"
    get:
      operationId: getFloors
      summary: Get all floor of a hotel.
      parameters:
        - in: path
          name: HIN
          required: true
          schema:
            type: string
          description: six digit pin number, unique to each hotel
          example: "000007"
      responses:
        "200":
          description: Returns the hotel with matching HIN.
          content:
            application/json:
              schema:
                type: object
                required:
                  - floors
                properties:
                  floors:
                    additionalProperties:
                      $ref: "#/paths/~1hotel~1%7BHIN%7D~1floors/post/requestBody/content/application~\
                        1json/schema"
  "/hotel/{HIN}/floors/{floor_id}":
    get:
      operationId: getFloor
      summary: Get a floor in a hotel.
      parameters:
        - in: path
          name: HIN
          required: true
          schema:
            type: string
          description: six digit pin number
          example: "000007"
        - in: path
          name: floor_id
          required: true
          schema:
            type: string
          description: id unique to the floor
      responses:
        "200":
          description: Returns the floor with matching HIN and floor_id
          content:
            applicatoin/json:
              schema:
                type: object
                required: -floor
                additionalProperties:
                  $ref: "#/paths/~1hotel~1%7BHIN%7D~1floors/post/requestBody/content/application~\
                    1json/schema"
    patch:
      parameters:
        - in: path
          name: HIN
          required: true
          schema:
            type: string
          description: six digit pin number
          example: "000007"
        - in: path
          name: floor_id
          required: true
          schema:
            type: string
          description: id unique to the floor
      operationId: updateFloor
      summary: Update the floor. All the rooms will be overwritten to default values
        and will be assigned new roomId.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/paths/~1hotel~1%7BHIN%7D~1floors/post/requestBody/content/application~\
                1json/schema"
      responses:
        "200":
          content:
            application/json:
              required:
                - floor
              schema:
                type: object
                properties:
                  $ref: "#/paths/~1hotel~1%7BHIN%7D~1floors/post/requestBody/content/application~\
                    1json/schema"
    delete:
      parameters:
        - in: path
          name: HIN
          required: true
          schema:
            type: string
          description: six digit pin number
          example: "000007"
        - in: path
          name: floor_id
          required: true
          schema:
            type: string
          description: id unique to the floor
      operationId: deleteFloor
      summary: Remove the floor from the hotel.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
components:
  securitySchemes:
    bearerAuthorizer:
      type: http
      scheme: bearer
      description: Uses cognito to validate a JWT authorization token.
