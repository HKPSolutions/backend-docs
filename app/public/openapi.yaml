openapi: 3.0.3
servers:
  - url: https://r95e08rtmj.execute-api.us-east-1.amazonaws.com/
info:
  title: HKP Solutions Beta App API
  version: 0.0.1
  description: HKP Solutions Beta App API delivers functionality for all aspects
    of HKP Solutions Beta Application.
  contact:
    name: Alvan Caleb Arulandu
    email: caleb.arulandu@hkpsolutions.com
paths:
  /:
    get:
      operationId: getBaseUrl
      summary: Show API details
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              example:
                message: Welcome to HKP Solutions API!
  /calculator/add:
    post:
      operationId: calculatorAddNumbers
      summary: Add two numbers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - x
                - y
              properties:
                x:
                  type: integer
                y:
                  type: integer
              example:
                x: 1
                y: 2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - sum
                properties:
                  sum:
                    type: integer
                example:
                  sum: 3
      security:
        - bearerAuthorizer: []
  /users/sign-up:
    post:
      operationId: usersSignUpUnConfirmed
      summary: Sign's up a user but does not confirm.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - email
                - phoneNumber
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                phoneNumber:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                example: {}
  /users/confirm-sign-up:
    post:
      operationId: usersConfirmSignUp
      summary: Confirm unconfirmed user that has already signed up.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - email
                - phoneNumber
                - confirmationCode
                - employmentType
                - profileInfo
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                phoneNumber:
                  type: string
                confirmationCode:
                  type: integer
                employmentType:
                  type: string
                profileInfo:
                  type: object
                  properties:
                    dateOfBirth:
                      type: string
                    addressLineOne:
                      type: string
                    addressLineTwo:
                      type: string
                    city:
                      type: string
                    zip:
                      type: string
                    firstName:
                      type: string
                    lastName:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - authResult
                properties:
                  authResult:
                    type: object
                    required:
                      - AccessToken
                      - ExpiresIn
                      - TokenType
                      - Refresh Token
                      - IdToken
                    properties:
                      AccessToken:
                        type: string
                      ExpiresIn:
                        type: integer
                      TokenType:
                        type: string
                      RefreshToken:
                        type: string
                      IdToken:
                        type: string
                    example:
                      AccessToken: aweiofj....waoeifjoa
                      ExpiresIn: 3600
                      TokenType: Bearer
                      Refreshtoken: bwefja....bawefioje
                      IdToken: ceqioj....faweijbw
                  item:
                    type: object
                    properties:
                      userId:
                        type: string
                      username:
                        type: string
                      profileInfo:
                        $ref: "#/paths/~1users~1confirm-sign-up/post/requestBody/content/application~1j\
                          son/schema/properties/profileInfo"
                      employmentType:
                        type: string
                      startDate:
                        type: string
                      endDate:
                        type: string
  /users/login:
    post:
      operationId: usersLogin
      summary: Logs-in user and returns tokens.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
            example:
              username: bob
              email: bob@company.com
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - authResult
                properties:
                  authResult:
                    $ref: "#/paths/~1users~1confirm-sign-up/post/responses/200/content/application~\
                      1json/schema/properties/authResult"
components:
  securitySchemes:
    bearerAuthorizer:
      type: http
      scheme: bearer
      description: Uses cognito to validate a JWT authorization token.
