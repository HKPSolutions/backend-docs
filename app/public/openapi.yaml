openapi: 3.0.3
servers:
  - url: https://r95e08rtmj.execute-api.us-east-1.amazonaws.com/
info:
  title: HKP Solutions Beta App API
  version: 0.0.1
  description: HKP Solutions Beta App API delivers functionality for all aspects
    of HKP Solutions Beta Application.
  contact:
    name: Alvan Caleb Arulandu
    email: caleb.arulandu@hkpsolutions.com
paths:
  /:
    get:
      operationId: getBaseUrl
      summary: Show API details
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              example:
                message: Welcome to HKP Solutions API!
  /calculator/add:
    post:
      operationId: calculatorAddNumbers
      summary: Add two numbers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - x
                - y
              properties:
                x:
                  type: integer
                y:
                  type: integer
              example:
                x: 1
                y: 2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - sum
                properties:
                  sum:
                    type: integer
                example:
                  sum: 3
      security:
        - bearerAuthorizer: []
  /users/sign-up:
    post:
      operationId: usersSignUpUnConfirmed
      summary: Sign's up an user, but doesn't confirm them. To confirm an user, a
        confirmation text will be sent the the phone number. The phone number
        should be in international phone number format -- e.g.; an US phone
        number (202)456-1111 would be "+12024561111".
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - email
                - phoneNumber
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                phoneNumber:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                example: {}
  /users/confirm-sign-up:
    post:
      operationId: usersConfirmSignUp
      summary: Confirm unconfirmed user that has already signed up. Use the
        verification code sent to your phone number in the user sign up stage as
        the confirmation code. Confirmation codes should consist of six digits.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - email
                - phoneNumber
                - confirmationCode
                - employmentType
                - profileInfo
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                phoneNumber:
                  type: string
                confirmationCode:
                  type: integer
                employmentType:
                  type: string
                profileInfo:
                  type: object
                  properties:
                    dateOfBirth:
                      type: string
                    addressLineOne:
                      type: string
                    addressLineTwo:
                      type: string
                    city:
                      type: string
                    zip:
                      type: string
                    firstName:
                      type: string
                    lastName:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - authResult
                properties:
                  authResult:
                    type: object
                    required:
                      - AccessToken
                      - ExpiresIn
                      - TokenType
                      - Refresh Token
                      - IdToken
                    properties:
                      AccessToken:
                        type: string
                      ExpiresIn:
                        type: integer
                      TokenType:
                        type: string
                      RefreshToken:
                        type: string
                      IdToken:
                        type: string
                    example:
                      AccessToken: aweiofj....waoeifjoa
                      ExpiresIn: 3600
                      TokenType: Bearer
                      Refreshtoken: bwefja....bawefioje
                      IdToken: ceqioj....faweijbw
                  item:
                    type: object
                    properties:
                      userId:
                        type: string
                      username:
                        type: string
                      profileInfo:
                        $ref: "#/paths/~1users~1confirm-sign-up/post/requestBody/content/application~1j\
                          son/schema/properties/profileInfo"
                      employmentType:
                        type: string
                      startDate:
                        type: string
                      endDate:
                        type: string
  /users/login:
    post:
      operationId: usersLogin
      summary: Logs-in user and returns tokens.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
            example:
              username: bob
              email: bob@company.com
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - authResult
                properties:
                  authResult:
                    $ref: "#/paths/~1users~1confirm-sign-up/post/responses/200/content/application~\
                      1json/schema/properties/authResult"
  /hotels:
    post:
      operationId: createHotel
      summary: Creates a new hotel.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                HIN:
                  type: string
                name:
                  type: string
                address:
                  type: string
              required:
                - HIN
                - name
                - address
              example:
                HIN: "123321"
                name: Marriot
                address: 123 Generic Street, 12345, New York NY, USA
      responses:
        "201":
          description: Returns the newly created hotel.
          content:
            application/json:
              schema:
                type: object
                properties:
                  new_hotel:
                    type: object
                    properties:
                      HIN:
                        type: string
                      hotel_info:
                        type: object
                        properties:
                          address:
                            type: string
                          name:
                            type: string
                        required:
                          - address
                          - name
                      floors:
                        type: object
                        additionalProperties:
                          $ref: "#/paths/~1hotels~1%7BHIN%7D~1floors/post/responses/201/content/applicati\
                            on~1json/schema/properties/floor/additionalProperti\
                            es"
                    required:
                      - HIN
                      - hotel_info
                      - floors
                    example:
                      HIN: "123456"
                      hotel_info:
                        name: Marriot
                        address: 123 Generic Street, 12345, New York NY, USA
                      floors:
                        66ef0282-8226-11eb-9d5d-4fe6df708afd(#floor_id):
                          floor_name: 2F
                          rooms:
                            66ef0281-8226-11eb-9d5d-4fe6df708afd(#room_id):
                              room_name: "201"
                              rate: 10
                              service_status: none_needed
                              is_decommissioned: false
                              type: SUITE
                              occupied_by: null
                              clean_status: finished_cleaning
                        ec4110a1-8225-11eb-9d5d-4fe6df708afd(#floor_id):
                          floor_name: 1F
                          rooms:
                            13a09df1-822b-11eb-b3e6-cb27df13eb4e(#room_id):
                              room_name: "102"
                              rate: 10
                              service_status: none_needed
                              is_decommissioned: false
                              type: KING
                              occupied_by: null
                              clean_status: finished_cleaning
                            13a09df0-822b-11eb-b3e6-cb27df13eb4e(#room_id):
                              room_name: "101"
                              rate: 10
                              service_status: none_needed
                              is_decommissioned: false
                              type: SUITE
                              occupied_by: null
                              clean_status: finished_cleaning
                required:
                  - new_hotel
                example:
                  new_hotel:
                    HIN: "123321"
                    hotel_info:
                      address: 123 Generic Street, 12345, New York NY, USA
                      name: Marriot
                    floors: {}
  "/hotels/{HIN}":
    get:
      operationId: getHotel
      summary: Find hotel item by Hotel Identification Number (HIN).
      parameters:
        - in: path
          name: HIN
          required: true
          schema:
            type: string
          description: six digit pin number, unique to each hotel
          example: "123456"
      responses:
        "200":
          description: Returns the hotel with matching HIN.
          content:
            application/json:
              schema:
                type: object
                required:
                  - hotel
                properties:
                  hotel:
                    $ref: "#/paths/~1hotels/post/responses/201/content/application~1json/schema/pro\
                      perties/new_hotel"
  "/hotels/{HIN}/floors":
    post:
      operationId: createFloor
      summary: Creates a new floor in the hotel with matching HIN.
      parameters:
        - in: path
          name: HIN
          required: true
          schema:
            type: string
          description: six digit pin number, unique to each hotel
          example: "123456"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                floor_name: string
                rooms:
                  type: object
                  properties:
                    additionalProperties:
                      type: object
                      properties:
                        type:
                          type: string
              example:
                floor_name: 1F
                rooms:
                  "101":
                    type: KING
                  "102":
                    type: SUITE
      responses:
        "201":
          description: Returns the newly created floor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  floor:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        floor_name:
                          type: string
                          example: 1F
                        rooms:
                          type: object
                          additionalProperties:
                            type: object
                            properties:
                              room_name:
                                type: string
                              type:
                                type: string
                                enum:
                                  - KING
                                  - DOUBLE
                                  - SUITE
                                  - ADA
                                  - null
                              rate:
                                type: number
                              is_decommissioned:
                                type: boolean
                              occupied_by:
                                type: string
                              clean_status:
                                type: string
                                nullable: true
                                enum:
                                  - needs_cleaning
                                  - current_clean
                                  - finished_cleaning
                                  - null
                              service_status:
                                type: string
                                nullable: true
                                enum:
                                  - none_needed
                                  - housekeeper_service
                                  - serious_service
                                  - null
                example:
                  floor:
                    0d2c1592-8ac7-11eb-896d-fd2829b676c6(#floor_id):
                      floor_name: 1F
                      rooms:
                        0d2c1590-8ac7-11eb-896d-fd2829b676c6(#room_id):
                          room_name: "101"
                          is_decommissioned: false
                          occupied_by: null
                          clean_status: finished_cleaning
                          service_status: none_needed
                          type: KING
                          rate: 10
                        0d2c1591-8ac7-11eb-896d-fd2829b676c6(room_id):
                          room_name: "102"
                          is_decommissioned: false
                          occupied_by: null
                          clean_status: finished_cleaning
                          service_status: none_needed
                          type: SUITE
                          rate: 10
    get:
      operationId: getFloors
      summary: Get all floor of a hotel.
      parameters:
        - in: path
          name: HIN
          required: true
          schema:
            type: string
          description: six digit pin number, unique to each hotel
          example: "123456"
      responses:
        "200":
          description: Returns the hotel with matching HIN.
          content:
            application/json:
              schema:
                type: object
                required:
                  - floors
                properties:
                  floors:
                    additionalProperties:
                      $ref: "#/paths/~1hotels~1%7BHIN%7D~1floors/post/responses/201/content/applicati\
                        on~1json/schema/properties/floor/additionalProperties"
                example:
                  floors:
                    0d2c1592-8ac7-11eb-896d-fd2829b676c6(#floor_id):
                      floor_name: 1F
                      rooms:
                        0d2c1591-8ac7-11eb-896d-fd2829b676c6(#room_id):
                          room_name: "102"
                          rate: 10
                          service_status: none_needed
                          is_decommissioned: false
                          type: SUITE
                          occupied_by: null
                          clean_status: finished_cleaning
                        0d2c1590-8ac7-11eb-896d-fd2829b676c6(#room_id):
                          room_name: "101"
                          rate: 10
                          service_status: none_needed
                          is_decommissioned: false
                          type: KING
                          occupied_by: null
                          clean_status: finished_cleaning
                    66ef0282-8226-11eb-9d5d-4fe6df708afd(#floor_id):
                      floor_name: 2F
                      rooms:
                        66ef0281-8226-11eb-9d5d-4fe6df708afd(#room_id):
                          room_name: "201"
                          rate: 10
                          service_status: none_needed
                          is_decommissioned: false
                          type: SUITE
                          occupied_by: null
                          clean_status: finished_cleaning
  "/hotels/{HIN}/floors/{floor_id}":
    get:
      operationId: getFloor
      summary: Get a floor in a hotel.
      parameters:
        - in: path
          name: HIN
          required: true
          schema:
            type: string
          description: six digit pin number
          example: "123456"
        - in: path
          name: floor_id
          required: true
          schema:
            type: string
          description: id unique to the floor
          example: 0d2c1592-8ac7-11eb-896d-fd2829b676c6
      responses:
        "200":
          description: Returns the floor with matching HIN and floor_id
          content:
            application/json:
              schema:
                type: object
                properties:
                  floor:
                    type: object
                    additionalProperties:
                      $ref: "#/paths/~1hotels~1%7BHIN%7D~1floors/post/responses/201/content/applicati\
                        on~1json/schema/properties/floor/additionalProperties"
                required: -floor
                example:
                  floor:
                    0d2c1592-8ac7-11eb-896d-fd2829b676c6(#floor_id):
                      floor_name: 1F
                      rooms:
                        0d2c1591-8ac7-11eb-896d-fd2829b676c6(#room_id):
                          room_name: "102"
                          rate: 10
                          service_status: none_needed
                          is_decommissioned: false
                          type: SUITE
                          occupied_by: null
                          clean_status: finished_cleaning
                        0d2c1590-8ac7-11eb-896d-fd2829b676c6(#room_id):
                          room_name: "101"
                          rate: 10
                          service_status: none_needed
                          is_decommissioned: false
                          type: KING
                          occupied_by: null
                          clean_status: finished_cleaning
    put:
      parameters:
        - in: path
          name: HIN
          required: true
          schema:
            type: string
          description: six digit pin number
          example: "123456"
        - in: path
          name: floor_id
          required: true
          schema:
            type: string
          description: id unique to the floor
          example: ec4110a1-8225-11eb-9d5d-4fe6df708afd
      operationId: updateFloor
      summary: Update the floor. All the rooms will be overwritten to default values
        and will be assigned new room_id.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                floor_name: string
                rooms:
                  type: object
                  properties:
                    additionalProperties:
                      type: object
                      properties:
                        type:
                          type: string
              example:
                floor_name: 1F
                rooms:
                  "111":
                    type: KING
                  "112":
                    type: SUITE
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  floor:
                    $ref: "#/paths/~1hotels~1%7BHIN%7D~1floors/post/responses/201/content/applicati\
                      on~1json/schema/properties/floor/additionalProperties"
                required:
                  - floor
                example:
                  floor:
                    ec4110a1-8225-11eb-9d5d-4fe6df708afd:
                      floor_name: 1F
                      rooms:
                        265abbc0-8ae0-11eb-8d4c-1517d716eb2b:
                          room_name: "111"
                          is_decommissioned: false
                          occupied_by: null
                          clean_status: finished_cleaning
                          service_status: none_needed
                          type: SUITE
                          rate: 10
                        265ae2d0-8ae0-11eb-8d4c-1517d716eb2b:
                          room_name: "112"
                          is_decommissioned: false
                          occupied_by: null
                          clean_status: finished_cleaning
                          service_status: none_needed
                          type: KING
                          rate: 10
    delete:
      parameters:
        - in: path
          name: HIN
          required: true
          schema:
            type: string
          description: six digit pin number
          example: "123456"
        - in: path
          name: floor_id
          required: true
          schema:
            type: string
          description: id unique to the floor
          example: ec4110a1-8225-11eb-9d5d-4fe6df708afd
      operationId: deleteFloor
      summary: Remove the floor from the hotel.
      responses:
        "204":
          description: The resource was deleted successfully.
components:
  securitySchemes:
    bearerAuthorizer:
      type: http
      scheme: bearer
      description: Uses cognito to validate a JWT authorization token.
